#!/usr/bin/env bash
set -o errexit
set -o nounset
# set -o xtrace
set -o pipefail

eval "$(parse-options help:h -- "$@")"

if [[ $help ]]
then
	cat '/usr/share/gitaur/help/gitaur-deploy'
else
	case $# in
		'0')
			PKGBUILD='PKGBUILD'
			VERSION=''
			;;
		'1')
			if [[ $(basename "$1") = 'PKGBUILD' ]]
			then
				PKGBUILD=$(realpath "$1")
				VERSION=''
			else
				PKGBUILD='PKGBUILD'
				VERSION=$1
			fi
			;;
		'2')
			PKGBUILD=$(realpath "$1")
			VERSION=$2
			;;
	esac

	if [[ $(basename "$PKGBUILD") != 'PKGBUILD' || ! -f $PKGBUILD ]]
	then
		echo 'Please specify a valid path to a PKGBUILD file' >&2
		exit 1
	fi

	if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+-[0-9]+$ ]]
	then
		echo 'Please specify a valid version' >&2
		exit 1
	fi

	if [[ $VERSION ]]
	then
		git tag "$VERSION" || exit 1
		git push origin "$VERSION" || exit 1
	fi

	PKG="$(dirname "$PKGBUILD")"
	TMP="$(mktemp -d)"

	gitaur-pkgbuild "$PKGBUILD" "$VERSION" > "$TMP/PKGBUILD"
	ERRORS=$(namcap "$TMP/PKGBUILD")
	if [[ -n $ERRORS ]]
	then
		echo "$ERRORS"
		exit 1
	fi

	eval "$(cat "$TMP/PKGBUILD")"

	git clone "ssh://aur@aur.archlinux.org/$pkgname" "$TMP/$pkgname"
	cp "$TMP/PKGBUILD" "$TMP/$pkgname/PKGBUILD"
	mksrcinfo -o "$TMP/$pkgname/.SRCINFO" "$TMP/$pkgname/PKGBUILD"

	pushd "$TMP/$pkgname" >/dev/null

	git add -A
	git commit -m "v$pkgver-$pkgrel"
	git push origin master

	mkaurball

	popd >/dev/null

	hub release create \
		-a "$TMP/$pkgname/$pkgname-$pkgver-$pkgrel.src.tar.gz" \
		-m "v$pkgver-$pkgrel" \
		"v$pkgver-$pkgrel"

	rm -rf "$TMP"
fi
